#news
  .well
    %h2.title Beitragsverwaltung

  - @news.each do |news|
    .well
      .pull-left
        %h5.title= news.title
        .title
          URL:
          %code= link_to news_url(news), news
        - if news.category.nil?
          .title Kategorie: Keine Kategorie
        - else
          .title
            Kategorie:
            %code= link_to news.category.title, admin_categorized_news_path(category: news.category.to_param)
      .pull-right
        - unless news.published?
          %span.label.warning Unveröffentlicht
        - if news.internal?
          %span.label.alert Interner Beitrag
      %p.clearfix

      - if news.teaser != news.body
        .callout
          %h5.title Vorschau
          %p= news.teaser.html_safe

      .callout
        %h5.title Vollansicht
        %p= news.body.html_safe

      %p.float-left
        = link_to t('links.show'), news, class: "button secondary small"
        = link_to t('links.update'), [:edit, :admin, news], class: "button primary small"
      %p.float-right
        - if news.published?
          = link_to t('links.unpublish'), [:unpublish, :admin, news], method: :put, class: "button alert small"
        - else
          = link_to t('links.publish'), [:publish, :admin, news], method: :put, class: "button success small"
        = link_to t('links.delete'), [:admin, news], method: :delete, class: "button warning small", data: { confirm: t('confirmations.named.delete', name: news.title) }
      %br.clear

  .pageination
    = will_paginate @news, renderer: FoundationPagination::Rails, previous_label: "Zurück", next_label: "Weiter"

  .row
    .large-12.columns.show-for-large
      = link_to [:new, :admin, :news], class: "button" do
        = icon :plus
        = t('links.create')
    .small-12.columns.hide-for-large
      = link_to [:new, :admin, :news], class: "button expanded" do
        = icon :plus
        = t('links.create')
